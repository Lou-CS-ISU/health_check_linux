#! /bin/sh

PROG=`basename $0`
PROGDIR=`dirname $0`
TMPDIR=/tmp/
host=`hostname | awk -F '.' '{ print $1 }'`

lRC=0

NOW=`date '+%Y%m%d_%H%M%S'`

HOST=`uname -n | cut -d. -f1`

ipcs -su > $TMPDIR/$PROG.$NOW.out.$HOST.su

ipcs -sl > $TMPDIR/$PROG.$NOW.out.$HOST.sl

SAR_USED_NO=`grep "used arrays" $TMPDIR/$PROG.$NOW.out.$HOST.su | awk '{print $NF}'`
SAR_LIMT_NO=`grep "max number of arrays" $TMPDIR/$PROG.$NOW.out.$HOST.sl | awk '{print $NF}'`

SEM_USED_NO=`grep "allocated semaphores" $TMPDIR/$PROG.$NOW.out.$HOST.su | awk '{print $NF}'`
SEM_LIMT_NO=`grep "max semaphores system wide" $TMPDIR/$PROG.$NOW.out.$HOST.sl | awk '{print $NF}'`

# echo SAR_USED_NO $SAR_USED_NO SAR_LIMT_NO $SAR_LIMT_NO SEM_USED_NO $SEM_USED_NO SEM_LIMT_NO $SEM_LIMT_NO

ipcs -qu > $TMPDIR/$PROG.$NOW.out.$HOST.qu

ipcs -ql > $TMPDIR/$PROG.$NOW.out.$HOST.ql

echo "<TABLE  cellSpacing=5 border=1 cellPadding=0><TBODY>"

echo "<TR>"
echo "<TD align=center bgcolor=lightyellow>&nbsp;</TD><TD align=center bgcolor=lightyellow COLSPAN=4>Semaphore</TD>"
echo "</TR>"
echo "<TR>"
echo "<TD align=center bgcolor=lightyellow>&nbsp;</TD><TD align=center bgcolor=lightyellow>Max</TD><TD align=center bgcolor=lightyellow>Used</TD><TD align=center bgcolor=lightyellow>Threshold %</TD><TD align=center bgcolor=lightyellow>Used %</TD>"
echo "</TR>"
echo "<TR>"

SAR_THRESHOLD=`grep "used arrays|" $PROGDIR/$PROG.env | cut -d"|" -f2`

echo | awk -v SAR_LIMT_NO=$SAR_LIMT_NO -v SAR_USED_NO=$SAR_USED_NO -v SAR_THRESHOLD=$SAR_THRESHOLD 'BEGIN{alert=0}{
	used_percent=SAR_USED_NO / SAR_LIMT_NO * 100;
	if ( used_percent >= SAR_THRESHOLD ) {
		printf "<TD align=center bgcolor=red>used arrays</TD><TD align=center bgcolor=red> %s </TD><TD align=center bgcolor=red> %s </TD><TD align=center bgcolor=red> %s </TD><TD align=center bgcolor=red> %5.2f </TD>", SAR_LIMT_NO, SAR_USED_NO, SAR_THRESHOLD, SAR_USED_NO / SAR_LIMT_NO * 100;
		alert=1;
	} else {
		printf "<TD align=center bgcolor=ivory>used arrays</TD><TD align=center bgcolor=ivory> %s </TD><TD align=center bgcolor=ivory> %s </TD><TD align=center bgcolor=ivory> %s </TD><TD align=center bgcolor=ivory> %5.2f </TD>", SAR_LIMT_NO, SAR_USED_NO, SAR_THRESHOLD, SAR_USED_NO / SAR_LIMT_NO * 100;
	}
}END{exit alert;}'

lRC=`expr $lRC + $?`

echo "</TR>"
echo "<TR>"

SEM_THRESHOLD=`grep "allocated semaphores|" $PROGDIR/$PROG.env | cut -d"|" -f2`

echo | awk -v SEM_LIMT_NO=$SEM_LIMT_NO -v SEM_USED_NO=$SEM_USED_NO -v SEM_THRESHOLD=$SEM_THRESHOLD 'BEGIN{alert=0}{
	used_percent=SEM_USED_NO / SEM_LIMT_NO * 100;
	if ( used_percent >= SEM_THRESHOLD ) {
		printf "<TD align=center bgcolor=red>allocated semaphores</TD><TD align=center bgcolor=red> %s </TD><TD align=center bgcolor=red> %s </TD><TD align=center bgcolor=red> %s </TD><TD align=center bgcolor=red> %5.2f </TD>", SEM_LIMT_NO, SEM_USED_NO, SEM_THRESHOLD, SEM_USED_NO / SEM_LIMT_NO * 100;
		alert=1;
	} else {
		printf "<TD align=center bgcolor=ivory>allocated semaphores</TD><TD align=center bgcolor=ivory> %s </TD><TD align=center bgcolor=ivory> %s </TD><TD align=center bgcolor=ivory> %s </TD><TD align=center bgcolor=ivory> %5.2f </TD>", SEM_LIMT_NO, SEM_USED_NO, SEM_THRESHOLD, SEM_USED_NO / SEM_LIMT_NO * 100;
	}
}END{exit alert;}'

lRC=`expr $lRC + $?`

echo "</TR>"
echo "</TABLE></TBODY>"


##############################################################################

ipcs -mu > $TMPDIR/$PROG.$NOW.out.$HOST.mu

ipcs -ml > $TMPDIR/$PROG.$NOW.out.$HOST.ml

SHM_USED_NO=`grep "segments allocated" $TMPDIR/$PROG.$NOW.out.$HOST.mu | awk '{print $NF}'`
SHM_LIMT_NO=`grep "max number of segments" $TMPDIR/$PROG.$NOW.out.$HOST.ml | awk '{print $NF}'`

SHM_SIZE_USED_NO=`ipcs -m | awk '{sum=sum+$5}END{print int(sum / 1024)}'`
SHM_SIZE_LIMT_NO=`grep "max total shared memory (kbytes)" $TMPDIR/$PROG.$NOW.out.$HOST.ml | awk '{print $NF}'`

# echo SHM_USED_NO $SHM_USED_NO SHM_LIMT_NO $SHM_LIMT_NO SHM_USED_SIZE $SHM_USED_SIZE SHM_LIMT_SIZE $SHM_LIMT_SIZE

echo "<BR>"
echo "<TABLE  cellSpacing=5 border=1 cellPadding=0><TBODY>"

echo "<TR>"
echo "<TD align=center bgcolor=lightyellow>&nbsp;</TD><TD align=center bgcolor=lightyellow COLSPAN=4>Share Memory</TD>"
echo "</TR>"
echo "<TR>"
echo "<TD align=center bgcolor=lightyellow>&nbsp;</TD><TD align=center bgcolor=lightyellow>Max</TD><TD align=center bgcolor=lightyellow>Used</TD><TD align=center bgcolor=lightyellow>Threshold %</TD><TD align=center bgcolor=lightyellow>Used %</TD>"
echo "</TR>"
echo "<TR>"

# max total shared memory (kbytes)|80

SHM_THRESHOLD=`grep "segments allocated|" $PROGDIR/$PROG.env | cut -d"|" -f2`

echo | awk -v SHM_LIMT_NO=$SHM_LIMT_NO -v SHM_USED_NO=$SHM_USED_NO -v SHM_THRESHOLD=$SHM_THRESHOLD 'BEGIN{alert=0;}{
        used_percent=SHM_USED_NO / SHM_LIMT_NO * 100;
        if ( used_percent >= SHM_THRESHOLD ) {
                printf "<TD align=center bgcolor=red>segments allocated</TD><TD align=center bgcolor=red> %s </TD><TD align=center bgcolor=red> %s </TD><TD align=center bgcolor=red> %s </TD><TD align=center bgcolor=red> %5.2f </TD>", SHM_LIMT_NO, SHM_USED_NO, SHM_THRESHOLD, used_percent;
		alert=1;
        } else {
                printf "<TD align=center bgcolor=ivory>segments allocated</TD><TD align=center bgcolor=ivory> %s </TD><TD align=center bgcolor=ivory> %s </TD><TD align=center bgcolor=ivory> %s </TD><TD align=center bgcolor=ivory> %5.2f </TD>", SHM_LIMT_NO, SHM_USED_NO, SHM_THRESHOLD, used_percent;
        }
}END{exit alert;}'

lRC=`expr $lRC + $?`

echo "</TR>"
echo "<TR>"

SHM_SIZE_THRESHOLD=`grep "max total shared memory (kbytes)|" $PROGDIR/$PROG.env | cut -d"|" -f2`

echo | awk -v SHM_SIZE_LIMT_NO=$SHM_SIZE_LIMT_NO -v SHM_SIZE_USED_NO=$SHM_SIZE_USED_NO -v SHM_SIZE_THRESHOLD=$SHM_SIZE_THRESHOLD 'BEGIN{alert=0;}{
        used_percent=SHM_SIZE_USED_NO / SHM_SIZE_LIMT_NO * 100;
        if ( used_percent >= SHM_SIZE_THRESHOLD ) {
                printf "<TD align=center bgcolor=red>max total shared memory (kbytes)</TD><TD align=center bgcolor=red> %s </TD><TD align=center bgcolor=red> %s </TD><TD align=center bgcolor=red> %s </TD><TD align=center bgcolor=red> %5.2f </TD>", SHM_SIZE_LIMT_NO, SHM_SIZE_USED_NO, SHM_SIZE_THRESHOLD, used_percent;
		alert=1;
        } else {
                printf "<TD align=center bgcolor=ivory>max total shared memory (kbytes)</TD><TD align=center bgcolor=ivory> %s </TD><TD align=center bgcolor=ivory> %s </TD><TD align=center bgcolor=ivory> %s </TD><TD align=center bgcolor=ivory> %5.2f </TD>", SHM_SIZE_LIMT_NO, SHM_SIZE_USED_NO, SHM_SIZE_THRESHOLD, used_percent;
        }
}END{exit alert}'

lRC=`expr $lRC + $?`

if [ $lRC -gt 0 ]; then
    echo "SEMAPHORE ISSUE " >> "/tmp/subject_issues"
fi

echo "</TR>"
echo "</TABLE></TBODY>"

rm -f $TMPDIR/$PROG.$NOW.out.$HOST.*

exit $lRC

